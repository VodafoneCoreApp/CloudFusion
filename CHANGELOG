Version number schema: vA.B.C[_stable]
A: Changes to the store interface
B: Added Features
C: Bugfixes
_stable means that the changes were successfully tested with all tests in the test suite, and a stress test for at least 24h

v.6.2.16:
    * Add error handling for Feature Fast Directory Listing 
v.6.2.15:
    * Bugfix file system; add exception EISDIR (old is file, new is directory) - introduced in last stable release
v.6.2.14_stable:
    * Bugfix in metadata caching layer, which caused already cached data to be retrieved
    * Add Feature Support for WebDAV
    * Add Feature Fast Directory Listing for WebDAV
    * Bugfix directory listing for Amazon S3 and Google Storage (don't list the directory name itself)
    * Bugfix file system; remove wrong exception, when renaming, add exception EISDIR (old is file, new is directory), add exception ENOTEMPTY when non empty directory should be removed
    * Bugfixes for archiving layer
    * Bugfix to show overall space for WebDAV if possible
    * Bugfix socket timeout settings, which were se to indefinite, leading to blocking processes
    * Bugfix for persistent revisions and credentials for Dropbox
v.5.10.15_stable:
    * Modify method delete of interface Store, adding is_dir parameter which is True iff the path to delete is a directory
    * Use parameter stop to stop cloudfusion
    * Add Feature Issue #10, make syncfolders available in root directory
    * Allow up to 100.000 files in a request to sugarsync
    * Add Feature Fast Transfer of Small Files by Archiving using type=chunk parameter in [store] section of configuration file
    * Add Feature Reduce File_Exists? Requests to Provider When Creating new File
    * Add Feature Directory Metadata Prefetching for fast directory listing
    * Add Feature Support for Amazon S3 
    * Add Feature Support for Google Storage
    * Add Feature Minimal Support for webdav (use command line only on root directory, only files no directories)
    * Update Issue #9 Automatic Login to Dropbox, adapt to changes in dropbox's interface (twice)
    * Bugfix rmdir to return an error when trying to delete non-empty directory
    * Bugfix mv to return an error when trying move a directory so that it would overwrite an existing directory
    * Use multiprocessing safe meta data cache
    * Fix LRU cache, only remove expired entries
    * Bugfix set correct size when storing fileobjects in metadata cache
    * Fix dropbox to prevent infinite loop of fruitless move requests if a file is overwritten
    * Fix cache, now uses sys.getsizeof to determine corrent in memory size
    * Modify class LRUCache, to prevent consecutive cache size reduction, as this is slow
v.4.3.14_stable:
    * Bugfix Issue #9 Automatic Login to Dropbox
    * Close Issue #11 Closing cloudfusion destroys config file... -> add --config parameter for more user friendly configuration
    * /stats/stats shows last heartbeat (upload synchronization cycle)
    * /stats/errors shows more convenient error messages
    * More robust upload workers (they are simply terminated if they are inactive for too long)
    * Continuous integration with Travis for quality assurance
    * Better synchronization to avoid multiprocessing/threading conflicts
    * Bugfix wrong size displayed with linux du command
    * Critical bugfix: When modifying a file that is currently uploaded, the modifications are not uploaded (except you modify the file again after the upload)
    * Bugfix multiprocess logging  
    * Bugfix in caching layer, to avoid unnecessary downloads (modified times were not saved due to a bug in the cache)
    * Clean up asynchronous workers to avoid allocating too many pipes
v.3.7.6_stable:
    * Close Issue #9 Automatic Login to Dropbox
    * Close Issue #8 Set Hard Limit for Cache Size
    * Close Issue #7 Show Sync Status of File 
    * Close Issue #5 Show Statistical Information
    * Close Issue #6 Gracefully handle errors on first connection
	* Bugfix in caching layer, to avoid unnecessary downloads 
	* Improved error handling
v.2.5.10_stable:
    * improved mechanism to stop file transfers to the server when the file is deleted (changed store interface)
    * exit application when deleting /config/config
    * read/write speed improvement
    * application entry point
    * improved logging
    * reduced memory requirement
v.1.0.0_stable:
    * change architecture to more asynchronous remote communication (faster)
    * file transfers to the server are stopped when the file is deleted (more efficient utilisation of bandwidth)
    * decreased memory overhead (tested under load for several days)
    * improved caching (data is kept after restart & no data lost on unexpected shutdown)
    * robust error handling (socket errors: internet connection may be broken, stops adding write transfers when hitting quota limit, reauthenticates if required, retries several times)
    * Provider Provisioning (no more need to create a developer account)

